import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Test {

	A a = new B() ;
	C c = new D() ;
	
	
	public static void main(String[] args)
	{
		System.out.println(time(new int []{1,2,3,5} , 2));
	}
	public static int time (int [] arr , int pos )
	{
		int time=pos ;	
		int nbrticket=arr[pos] ;
		for(int i=0 ; i< nbrticket ; i++)
		{
			int length=0 ;
			  for(int j=0   ; j<arr.length ; j++)
			  {
				  if(arr[j]>0 )
					  {   
					 
					  arr[j]=arr[j]-1 ;  
					 }
				  if(arr[j]==0)  {length++ ; }
			  }
			  
			  int c =arr.length - length ;
			  System.out.println(c) ;
			  time=time+c ;
		}
		
		
		return time; 
	}
	
	
	
	
	public static List<Integer> rotate (List<Integer> l , int d)
	{
	
		for(int i=0 ; i<d ; i++)
		{
			int c= l.get(0) ;
			//System.out.println(c);
			l.remove(0) ;
			l.add(c) ;
		} 
		return l ;
	}
	
	static int nonDivisibleSubset(int k, int[] S) {

       int x=0 ;
       int res=0; 
       while(x< S.length-1)
       {
    	   for(int i=x+1 ; i<S.length ; i++)
    	   {
    		   if((S[x]+S[i])%k!=0) res++ ;
    	   }
    	   System.out.println(S[x]);
    	   x++ ;
    	   
       }
		
		return res;
    }

	
}
